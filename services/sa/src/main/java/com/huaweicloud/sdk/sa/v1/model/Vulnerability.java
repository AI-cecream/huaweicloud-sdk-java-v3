package com.huaweicloud.sdk.sa.v1.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.Objects;

/** Vulnerability */
public class Vulnerability {

    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonProperty(value = "vul_id")

    private String vulId;

    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonProperty(value = "type")

    private String type;

    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonProperty(value = "threat_type")

    private String threatType;

    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonProperty(value = "severity")

    private String severity;

    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonProperty(value = "score")

    private BigDecimal score;

    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonProperty(value = "vector")

    private String vector;

    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonProperty(value = "version")

    private String version;

    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonProperty(value = "created_at")

    private OffsetDateTime createdAt;

    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonProperty(value = "updated_at")

    private OffsetDateTime updatedAt;

    public Vulnerability withVulId(String vulId) {
        this.vulId = vulId;
        return this;
    }

    /** 漏洞编号。
     * 
     * @return vulId */
    public String getVulId() {
        return vulId;
    }

    public void setVulId(String vulId) {
        this.vulId = vulId;
    }

    public Vulnerability withType(String type) {
        this.type = type;
        return this;
    }

    /** 漏洞类型。
     * 
     * @return type */
    public String getType() {
        return type;
    }

    public void setType(String type) {
        this.type = type;
    }

    public Vulnerability withThreatType(String threatType) {
        this.threatType = threatType;
        return this;
    }

    /** 威胁类型。
     * 
     * @return threatType */
    public String getThreatType() {
        return threatType;
    }

    public void setThreatType(String threatType) {
        this.threatType = threatType;
    }

    public Vulnerability withSeverity(String severity) {
        this.severity = severity;
        return this;
    }

    /** 危害等级（超危、高危、中危、低危）。
     * 
     * @return severity */
    public String getSeverity() {
        return severity;
    }

    public void setSeverity(String severity) {
        this.severity = severity;
    }

    public Vulnerability withScore(BigDecimal score) {
        this.score = score;
        return this;
    }

    /** CVSS评分。 minimum: 0 maximum: 1E+1
     * 
     * @return score */
    public BigDecimal getScore() {
        return score;
    }

    public void setScore(BigDecimal score) {
        this.score = score;
    }

    public Vulnerability withVector(String vector) {
        this.vector = vector;
        return this;
    }

    /** 评分向量。
     * 
     * @return vector */
    public String getVector() {
        return vector;
    }

    public void setVector(String vector) {
        this.vector = vector;
    }

    public Vulnerability withVersion(String version) {
        this.version = version;
        return this;
    }

    /** CVSS版本。
     * 
     * @return version */
    public String getVersion() {
        return version;
    }

    public void setVersion(String version) {
        this.version = version;
    }

    public Vulnerability withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /** 漏洞报告的创建时间，格式ISO8601：YYYY-MM-DDTHH:mm:ss.ms+timezone。时区信息为事件发生时区，无法解析时区的时间，默认时区填东八区。
     * 
     * @return createdAt */
    public OffsetDateTime getCreatedAt() {
        return createdAt;
    }

    public void setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }

    public Vulnerability withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /** 漏洞报告的更新时间，格式ISO8601：YYYY-MM-DDTHH:mm:ss.ms+timezone。时区信息为事件发生时区，无法解析时区的时间，默认时区填东八区。
     * 
     * @return updatedAt */
    public OffsetDateTime getUpdatedAt() {
        return updatedAt;
    }

    public void setUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Vulnerability vulnerability = (Vulnerability) o;
        return Objects.equals(this.vulId, vulnerability.vulId) && Objects.equals(this.type, vulnerability.type)
            && Objects.equals(this.threatType, vulnerability.threatType)
            && Objects.equals(this.severity, vulnerability.severity) && Objects.equals(this.score, vulnerability.score)
            && Objects.equals(this.vector, vulnerability.vector) && Objects.equals(this.version, vulnerability.version)
            && Objects.equals(this.createdAt, vulnerability.createdAt)
            && Objects.equals(this.updatedAt, vulnerability.updatedAt);
    }

    @Override
    public int hashCode() {
        return Objects.hash(vulId, type, threatType, severity, score, vector, version, createdAt, updatedAt);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Vulnerability {\n");
        sb.append("    vulId: ").append(toIndentedString(vulId)).append("\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("    threatType: ").append(toIndentedString(threatType)).append("\n");
        sb.append("    severity: ").append(toIndentedString(severity)).append("\n");
        sb.append("    score: ").append(toIndentedString(score)).append("\n");
        sb.append("    vector: ").append(toIndentedString(vector)).append("\n");
        sb.append("    version: ").append(toIndentedString(version)).append("\n");
        sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
        sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /** Convert the given object to string with each line indented by 4 spaces (except the first line). */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
